	.file	"IR_Controller_data.c"
.section .text,"ax",@progbits
.Ltext0:
	.global	IR_Controller_P
.section .data.IR_Controller_P,"aw",@progbits
	.align 2
	.type	IR_Controller_P, @object
	.size	IR_Controller_P, 64
IR_Controller_P:
	.word	1717986918
	.word	1072064102
	.word	0
	.word	1075576832
	.word	1202590843
	.word	1066695393
	.word	0
	.word	0
	.word	-1717986918
	.word	1069128089
	.word	0
	.word	1072693248
	.word	-755914244
	.word	1064329805
	.word	0
	.word	0
.section .text,"ax",@progbits
.Letext0:
	.file 1 "../../MyApp/AurixRacer/0_Src/AppSw/Tricore/Algorithm/ert/IR_Controller_types.h"
	.file 2 "../../MyApp/AurixRacer/0_Src/AppSw/Tricore/Algorithm/ert/rtwtypes.h"
	.file 3 "../../MyApp/AurixRacer/0_Src/AppSw/Tricore/Algorithm/ert/IR_Controller.h"
	.file 4 "../../_LibSrc/iLLD_1_0_1_8_0__TC27D/Src/BaseSw/iLLD/TC27D/Tricore/Cpu/Std/Platform_Types.h"
	.file 5 "../../_LibSrc/iLLD_1_0_1_8_0__TC27D/Src/BaseSw/iLLD/TC27D/Tricore/Cpu/Std/Ifx_Types.h"
	.file 6 "../../_LibSrc/iLLD_1_0_1_8_0__TC27D/Src/BaseSw/Service/CpuGeneric/StdIf/IfxStdIf.h"
	.file 7 "../../_LibSrc/iLLD_1_0_1_8_0__TC27D/Src/BaseSw/Service/CpuGeneric/StdIf/IfxStdIf_DPipe.h"
	.file 8 "../../_LibSrc/iLLD_1_0_1_8_0__TC27D/Src/BaseSw/Service/CpuGeneric/SysSe/Comm/Ifx_Console.h"
	.file 9 "../../MyApp/AurixRacer/0_Src/AppSw/Tricore/Algorithm/ert/IR_Controller_data.c"
	.file 10 "../../_LibSrc/iLLD_1_0_1_8_0__TC27D/Src/BaseSw/iLLD/TC27D/Tricore/_Impl/IfxCpu_cfg.h"
	.file 11 "../../_LibSrc/iLLD_1_0_1_8_0__TC27D/Src/BaseSw/Service/CpuGeneric/SysSe/Bsp/Assert.h"
.section .debug_info,"",@progbits
.Ldebug_info0:
	.uaword	0x9ee
	.uahalf	0x3
	.uaword	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.string	"GNU C 4.9.4 build on 2018-04-18 -mlicense-dir=c:\\hightec\\toolchains\\tricore\\v4.9.1.0-infineon-2.0\\bin\\../lib/gcc/tricore/4.9.4/../../../../licenses -mtc161 -g -O2 -std=c99 -fno-common -fstrict-volatile-bitfields -ffunction-sections -fdata-sections"
	.byte	0x1
	.string	"../../MyApp/AurixRacer/0_Src/AppSw/Tricore/Algorithm/ert/IR_Controller_data.c"
	.string	"D:\\\\MinKyu_AurixRacer\\\\Projects\\\\AurixRacer_SB_TC27D"
	.uaword	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.string	"signed char"
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.string	"unsigned char"
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.string	"short int"
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.string	"short unsigned int"
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.string	"unsigned int"
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.string	"float"
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.string	"double"
	.uleb128 0x3
	.string	"real_T"
	.byte	0x2
	.byte	0x40
	.uaword	0x1ef
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.string	"long unsigned int"
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.string	"char"
	.uleb128 0x4
	.byte	0x4
	.uleb128 0x5
	.byte	0x20
	.byte	0x1
	.byte	0x1a
	.uaword	0x257
	.uleb128 0x6
	.string	"P"
	.byte	0x1
	.byte	0x1b
	.uaword	0x1f9
	.byte	0
	.uleb128 0x6
	.string	"I"
	.byte	0x1
	.byte	0x1c
	.uaword	0x1f9
	.byte	0x8
	.uleb128 0x6
	.string	"D"
	.byte	0x1
	.byte	0x1d
	.uaword	0x1f9
	.byte	0x10
	.uleb128 0x6
	.string	"N"
	.byte	0x1
	.byte	0x1e
	.uaword	0x1f9
	.byte	0x18
	.byte	0
	.uleb128 0x3
	.string	"pid_param"
	.byte	0x1
	.byte	0x1f
	.uaword	0x226
	.uleb128 0x3
	.string	"Parameters_IR_Controller"
	.byte	0x1
	.byte	0x24
	.uaword	0x288
	.uleb128 0x7
	.string	"Parameters_IR_Controller_"
	.byte	0x40
	.byte	0x3
	.byte	0x31
	.uaword	0x2cb
	.uleb128 0x6
	.string	"LatPid"
	.byte	0x3
	.byte	0x32
	.uaword	0x257
	.byte	0
	.uleb128 0x6
	.string	"LongiPid"
	.byte	0x3
	.byte	0x38
	.uaword	0x257
	.byte	0x20
	.byte	0
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.string	"long int"
	.uleb128 0x3
	.string	"sint16"
	.byte	0x4
	.byte	0x5a
	.uaword	0x1ac
	.uleb128 0x3
	.string	"sint32"
	.byte	0x4
	.byte	0x5c
	.uaword	0x2cb
	.uleb128 0x3
	.string	"uint32"
	.byte	0x4
	.byte	0x5d
	.uaword	0x207
	.uleb128 0x3
	.string	"boolean"
	.byte	0x4
	.byte	0x68
	.uaword	0x19b
	.uleb128 0x3
	.string	"sint64"
	.byte	0x5
	.byte	0x24
	.uaword	0x31e
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.string	"long long int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.string	"long long unsigned int"
	.uleb128 0x8
	.byte	0x4
	.uaword	0x34f
	.uleb128 0x9
	.uleb128 0x3
	.string	"Ifx_TickTime"
	.byte	0x5
	.byte	0x3e
	.uaword	0x310
	.uleb128 0x3
	.string	"Ifx_SizeT"
	.byte	0x5
	.byte	0x4b
	.uaword	0x2d7
	.uleb128 0x5
	.byte	0x8
	.byte	0x5
	.byte	0x7e
	.uaword	0x39b
	.uleb128 0x6
	.string	"module"
	.byte	0x5
	.byte	0x80
	.uaword	0x349
	.byte	0
	.uleb128 0x6
	.string	"index"
	.byte	0x5
	.byte	0x81
	.uaword	0x2e5
	.byte	0x4
	.byte	0
	.uleb128 0x3
	.string	"IfxModule_IndexMap"
	.byte	0x5
	.byte	0x82
	.uaword	0x375
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.string	"sizetype"
	.uleb128 0xa
	.byte	0x1
	.byte	0xa
	.byte	0x76
	.uaword	0x411
	.uleb128 0xb
	.string	"IfxCpu_Index_0"
	.sleb128 0
	.uleb128 0xb
	.string	"IfxCpu_Index_1"
	.sleb128 1
	.uleb128 0xb
	.string	"IfxCpu_Index_2"
	.sleb128 2
	.uleb128 0xb
	.string	"IfxCpu_Index_none"
	.sleb128 3
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_InterfaceDriver"
	.byte	0x6
	.byte	0x62
	.uaword	0x224
	.uleb128 0x3
	.string	"IfxStdIf_DPipe"
	.byte	0x7
	.byte	0x33
	.uaword	0x447
	.uleb128 0x7
	.string	"IfxStdIf_DPipe_"
	.byte	0x4c
	.byte	0x7
	.byte	0xd5
	.uaword	0x5c6
	.uleb128 0x6
	.string	"driver"
	.byte	0x7
	.byte	0xd7
	.uaword	0x411
	.byte	0
	.uleb128 0x6
	.string	"txDisabled"
	.byte	0x7
	.byte	0xd8
	.uaword	0x301
	.byte	0x4
	.uleb128 0x6
	.string	"write"
	.byte	0x7
	.byte	0xdb
	.uaword	0x612
	.byte	0x8
	.uleb128 0x6
	.string	"read"
	.byte	0x7
	.byte	0xdc
	.uaword	0x659
	.byte	0xc
	.uleb128 0x6
	.string	"getReadCount"
	.byte	0x7
	.byte	0xdd
	.uaword	0x674
	.byte	0x10
	.uleb128 0x6
	.string	"getReadEvent"
	.byte	0x7
	.byte	0xde
	.uaword	0x6ad
	.byte	0x14
	.uleb128 0x6
	.string	"getWriteCount"
	.byte	0x7
	.byte	0xdf
	.uaword	0x75a
	.byte	0x18
	.uleb128 0x6
	.string	"getWriteEvent"
	.byte	0x7
	.byte	0xe0
	.uaword	0x77e
	.byte	0x1c
	.uleb128 0x6
	.string	"canReadCount"
	.byte	0x7
	.byte	0xe1
	.uaword	0x7b8
	.byte	0x20
	.uleb128 0x6
	.string	"canWriteCount"
	.byte	0x7
	.byte	0xe2
	.uaword	0x7fb
	.byte	0x24
	.uleb128 0x6
	.string	"flushTx"
	.byte	0x7
	.byte	0xe3
	.uaword	0x81f
	.byte	0x28
	.uleb128 0x6
	.string	"clearTx"
	.byte	0x7
	.byte	0xe4
	.uaword	0x888
	.byte	0x2c
	.uleb128 0x6
	.string	"clearRx"
	.byte	0x7
	.byte	0xe5
	.uaword	0x858
	.byte	0x30
	.uleb128 0x6
	.string	"onReceive"
	.byte	0x7
	.byte	0xe6
	.uaword	0x8a6
	.byte	0x34
	.uleb128 0x6
	.string	"onTransmit"
	.byte	0x7
	.byte	0xe7
	.uaword	0x8c6
	.byte	0x38
	.uleb128 0x6
	.string	"onError"
	.byte	0x7
	.byte	0xe8
	.uaword	0x8e7
	.byte	0x3c
	.uleb128 0x6
	.string	"getSendCount"
	.byte	0x7
	.byte	0xea
	.uaword	0x6e6
	.byte	0x40
	.uleb128 0x6
	.string	"getTxTimeStamp"
	.byte	0x7
	.byte	0xeb
	.uaword	0x71f
	.byte	0x44
	.uleb128 0x6
	.string	"resetSendCount"
	.byte	0x7
	.byte	0xec
	.uaword	0x905
	.byte	0x48
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_WriteEvent"
	.byte	0x7
	.byte	0x35
	.uaword	0x5e7
	.uleb128 0x8
	.byte	0x4
	.uaword	0x5ed
	.uleb128 0xc
	.uaword	0x301
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ReadEvent"
	.byte	0x7
	.byte	0x36
	.uaword	0x5e7
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_Write"
	.byte	0x7
	.byte	0x48
	.uaword	0x62e
	.uleb128 0x8
	.byte	0x4
	.uaword	0x634
	.uleb128 0xd
	.byte	0x1
	.uaword	0x301
	.uaword	0x653
	.uleb128 0xe
	.uaword	0x411
	.uleb128 0xe
	.uaword	0x224
	.uleb128 0xe
	.uaword	0x653
	.uleb128 0xe
	.uaword	0x350
	.byte	0
	.uleb128 0x8
	.byte	0x4
	.uaword	0x364
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_Read"
	.byte	0x7
	.byte	0x57
	.uaword	0x62e
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetReadCount"
	.byte	0x7
	.byte	0x5f
	.uaword	0x697
	.uleb128 0x8
	.byte	0x4
	.uaword	0x69d
	.uleb128 0xd
	.byte	0x1
	.uaword	0x2e5
	.uaword	0x6ad
	.uleb128 0xe
	.uaword	0x411
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetReadEvent"
	.byte	0x7
	.byte	0x67
	.uaword	0x6d0
	.uleb128 0x8
	.byte	0x4
	.uaword	0x6d6
	.uleb128 0xd
	.byte	0x1
	.uaword	0x5f2
	.uaword	0x6e6
	.uleb128 0xe
	.uaword	0x411
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetSendCount"
	.byte	0x7
	.byte	0x6f
	.uaword	0x709
	.uleb128 0x8
	.byte	0x4
	.uaword	0x70f
	.uleb128 0xd
	.byte	0x1
	.uaword	0x2f3
	.uaword	0x71f
	.uleb128 0xe
	.uaword	0x411
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetTxTimeStamp"
	.byte	0x7
	.byte	0x77
	.uaword	0x744
	.uleb128 0x8
	.byte	0x4
	.uaword	0x74a
	.uleb128 0xd
	.byte	0x1
	.uaword	0x350
	.uaword	0x75a
	.uleb128 0xe
	.uaword	0x411
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetWriteCount"
	.byte	0x7
	.byte	0x7f
	.uaword	0x697
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetWriteEvent"
	.byte	0x7
	.byte	0x87
	.uaword	0x7a2
	.uleb128 0x8
	.byte	0x4
	.uaword	0x7a8
	.uleb128 0xd
	.byte	0x1
	.uaword	0x5c6
	.uaword	0x7b8
	.uleb128 0xe
	.uaword	0x411
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_CanReadCount"
	.byte	0x7
	.byte	0x92
	.uaword	0x7db
	.uleb128 0x8
	.byte	0x4
	.uaword	0x7e1
	.uleb128 0xd
	.byte	0x1
	.uaword	0x301
	.uaword	0x7fb
	.uleb128 0xe
	.uaword	0x411
	.uleb128 0xe
	.uaword	0x364
	.uleb128 0xe
	.uaword	0x350
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_CanWriteCount"
	.byte	0x7
	.byte	0x9d
	.uaword	0x7db
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_FlushTx"
	.byte	0x7
	.byte	0xa6
	.uaword	0x83d
	.uleb128 0x8
	.byte	0x4
	.uaword	0x843
	.uleb128 0xd
	.byte	0x1
	.uaword	0x301
	.uaword	0x858
	.uleb128 0xe
	.uaword	0x411
	.uleb128 0xe
	.uaword	0x350
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ClearRx"
	.byte	0x7
	.byte	0xad
	.uaword	0x876
	.uleb128 0x8
	.byte	0x4
	.uaword	0x87c
	.uleb128 0xf
	.byte	0x1
	.uaword	0x888
	.uleb128 0xe
	.uaword	0x411
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ClearTx"
	.byte	0x7
	.byte	0xb4
	.uaword	0x876
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnReceive"
	.byte	0x7
	.byte	0xbc
	.uaword	0x876
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnTransmit"
	.byte	0x7
	.byte	0xc3
	.uaword	0x876
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnError"
	.byte	0x7
	.byte	0xca
	.uaword	0x876
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ResetSendCount"
	.byte	0x7
	.byte	0xd1
	.uaword	0x876
	.uleb128 0x5
	.byte	0x8
	.byte	0x8
	.byte	0x26
	.uaword	0x954
	.uleb128 0x6
	.string	"standardIo"
	.byte	0x8
	.byte	0x28
	.uaword	0x954
	.byte	0
	.uleb128 0x6
	.string	"align"
	.byte	0x8
	.byte	0x29
	.uaword	0x2d7
	.byte	0x4
	.byte	0
	.uleb128 0x8
	.byte	0x4
	.uaword	0x431
	.uleb128 0x3
	.string	"Ifx_Console"
	.byte	0x8
	.byte	0x2a
	.uaword	0x92a
	.uleb128 0x10
	.string	"IR_Controller_P"
	.byte	0x9
	.byte	0x18
	.uaword	0x268
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.uaword	IR_Controller_P
	.uleb128 0x11
	.uaword	0x39b
	.uaword	0x99b
	.uleb128 0x12
	.uaword	0x3b5
	.byte	0x2
	.byte	0
	.uleb128 0x13
	.string	"IfxCpu_cfg_indexMap"
	.byte	0xa
	.byte	0x96
	.uaword	0x9b8
	.byte	0x1
	.byte	0x1
	.uleb128 0x14
	.uaword	0x98b
	.uleb128 0x13
	.string	"Assert_verboseLevel"
	.byte	0xb
	.byte	0x79
	.uaword	0x2f3
	.byte	0x1
	.byte	0x1
	.uleb128 0x13
	.string	"Ifx_g_console"
	.byte	0x8
	.byte	0x2c
	.uaword	0x95a
	.byte	0x1
	.byte	0x1
	.byte	0
.section .debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.uleb128 0x10
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x35
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.byte	0
.section .debug_aranges,"",@progbits
	.uaword	0x14
	.uahalf	0x2
	.uaword	.Ldebug_info0
	.byte	0x4
	.byte	0
	.uahalf	0
	.uahalf	0
	.uaword	0
	.uaword	0
.section .debug_line,"",@progbits
.Ldebug_line0:
.section .debug_str,"",@progbits
	.ident	"GCC: (HighTec Release HDP-v4.9.1.0-infineon-2.0-df254e8) 4.9.4 build on 2018-04-18"
